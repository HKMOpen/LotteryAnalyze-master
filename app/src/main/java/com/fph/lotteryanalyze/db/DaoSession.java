package com.fph.lotteryanalyze.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.fph.lotteryanalyze.db.BallEntity;
import com.fph.lotteryanalyze.db.DltLotteryEntity;
import com.fph.lotteryanalyze.db.LotteryEntity;
import com.fph.lotteryanalyze.db.OmitEntity;

import com.fph.lotteryanalyze.db.BallEntityDao;
import com.fph.lotteryanalyze.db.DltLotteryEntityDao;
import com.fph.lotteryanalyze.db.LotteryEntityDao;
import com.fph.lotteryanalyze.db.OmitEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig ballEntityDaoConfig;
    private final DaoConfig dltLotteryEntityDaoConfig;
    private final DaoConfig lotteryEntityDaoConfig;
    private final DaoConfig omitEntityDaoConfig;

    private final BallEntityDao ballEntityDao;
    private final DltLotteryEntityDao dltLotteryEntityDao;
    private final LotteryEntityDao lotteryEntityDao;
    private final OmitEntityDao omitEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        ballEntityDaoConfig = daoConfigMap.get(BallEntityDao.class).clone();
        ballEntityDaoConfig.initIdentityScope(type);

        dltLotteryEntityDaoConfig = daoConfigMap.get(DltLotteryEntityDao.class).clone();
        dltLotteryEntityDaoConfig.initIdentityScope(type);

        lotteryEntityDaoConfig = daoConfigMap.get(LotteryEntityDao.class).clone();
        lotteryEntityDaoConfig.initIdentityScope(type);

        omitEntityDaoConfig = daoConfigMap.get(OmitEntityDao.class).clone();
        omitEntityDaoConfig.initIdentityScope(type);

        ballEntityDao = new BallEntityDao(ballEntityDaoConfig, this);
        dltLotteryEntityDao = new DltLotteryEntityDao(dltLotteryEntityDaoConfig, this);
        lotteryEntityDao = new LotteryEntityDao(lotteryEntityDaoConfig, this);
        omitEntityDao = new OmitEntityDao(omitEntityDaoConfig, this);

        registerDao(BallEntity.class, ballEntityDao);
        registerDao(DltLotteryEntity.class, dltLotteryEntityDao);
        registerDao(LotteryEntity.class, lotteryEntityDao);
        registerDao(OmitEntity.class, omitEntityDao);
    }
    
    public void clear() {
        ballEntityDaoConfig.clearIdentityScope();
        dltLotteryEntityDaoConfig.clearIdentityScope();
        lotteryEntityDaoConfig.clearIdentityScope();
        omitEntityDaoConfig.clearIdentityScope();
    }

    public BallEntityDao getBallEntityDao() {
        return ballEntityDao;
    }

    public DltLotteryEntityDao getDltLotteryEntityDao() {
        return dltLotteryEntityDao;
    }

    public LotteryEntityDao getLotteryEntityDao() {
        return lotteryEntityDao;
    }

    public OmitEntityDao getOmitEntityDao() {
        return omitEntityDao;
    }

}
